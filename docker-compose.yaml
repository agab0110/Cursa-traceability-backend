version: "3.8"
services:
  backend_app:
    container_name: backend_app
    build:
      context: .
      dockerfile: ./docker/php/Dockerfile
    expose:
      - 9000
    volumes:
      - .:/usr/src/app
      - ./public:/usr/src/app/public
    depends_on:
      - backend_db
    networks:
      - app_network

  backend_nginx:
    container_name: backend_nginx
    build:
      context: .
      dockerfile: ./docker/nginx/Dockerfile
    volumes:
      - ./public:/usr/src/app/public
    ports:
      - 8000:80
    depends_on:
      - backend_app
    environment:
      NGINX_FPM_HOST: backend_app
      NGINX_ROOT: /usr/src/app/public
    networks:
      - app_network

  backend_db:
    container_name: backend_db
    image: mysql:8.0.20
    restart: always
    volumes:
      - ./storage/db-data:/var/lib/mysql
    ports:
      - 3308:3309
    environment:
      MYSQL_DATABASE: backend
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: root
      MYSQL_PASSWORD: root
    networks:
      - app_network

  backend_redis:
    container_name: backend_redis
    image: redis:latest
    ports:
      - 6379:6379
    networks:
      - app_network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    restart: always
    ports:
      - "8070:80"
    environment:
      - PMA_ARBITRARY:1
      - PMA_HOST:mysql
      - PMA_PORT:'${FORWARD_DB_PORT:-3306}:3306'
      - MYSQL_USERNAME:"${DB_USERNAME}"
      - MYSQL_ROOT_PASSWORD:"${DB_PASSWORD}"

    depends_on:
      - backend_db
    networks:
      - app_network
networks:
  app_network:
    driver: bridge
